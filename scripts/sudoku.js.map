{"version":3,"sources":["sudoku.jsx"],"names":["demoMode","window","innerWidth","innerHeight","SudokuCell","React","Component","constructor","props","onPress","bind","startScroller","state","scroll","isTouch","x","y","digit","scrollCellHeight","orgY","setState","touching","scroller","e","pageX","touches","pageY","scrollDigit","Math","round","min","max","parseInt","fixedValue","sudoku","setGrid","send","preventDefault","stopPropagation","mouseUp","document","removeEventListener","addEventListener","type","isValid","parseFloat","isNaN","floor","shouldComponentUpdate","nextProps","nextState","value","render","className","darker","height","display","alignItems","justifyContent","marginTop","marginLeft","position","width","bottom","fillOpacity","fill","top","border","backgroundColor","color","opacity","overflow","SudokuGrid","grid","fixedGrid","addUpdateCallback","onUpdate","time","performance","now","solving","cellList","i","shuffleCellList","cellIndex","length","temp","index","random","updating","componentDidUpdate","demo","pos","componentDidMount","start","componentWillUnmount","stop","subGrid","xpos","ypos","odd","array","line","x_attr","y_attr","id","push","cells","title","showSudokuGrid","ReactDOM","getElementById"],"mappings":"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","file":"sudoku.js","sourcesContent":["const demoMode = window.innerWidth <= 100 || window.innerHeight <= 100;\n\nclass SudokuCell extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onPress = this.onPress.bind(this);\n        this.startScroller = this.startScroller.bind(this);\n        this.state = {\n            scroll: 0,\n        };\n        this.isTouch = false;\n    }\n\n    startScroller(x, y, digit, isTouch) {\n        const scrollCellHeight = 62;\n        let orgY = -digit*scrollCellHeight;\n        this.setState({\n            scroll: orgY,\n            touching: true,\n        });\n\n        function scroller(e) {\n            const pageX = e.touches ? e.touches[0].pageX : e.pageX;\n            const pageY = e.touches ? e.touches[0].pageY : e.pageY;\n            let scroll = orgY + (- y + pageY - x + pageX) * 2;\n            if(scroll>0) {\n                orgY -= scroll;\n                scroll = 0;\n            } else if(scroll<-9*scrollCellHeight) {\n                scroll = -9*scrollCellHeight;\n            }\n            this.setState({\n                scroll,\n            },function() {\n                const scrollDigit = Math.round(Math.min(9,Math.max(0,\n                    -this.state.scroll/scrollCellHeight)));\n                const digit = parseInt(this.props.fixedValue);\n                if(digit !== scrollDigit) {\n                    this.props.sudoku.setGrid(this.props.x,this.props.y,scrollDigit);\n                    this.props.sudoku.send();\n                }\n            });\n            e.preventDefault();\n            e.stopPropagation();\n        }\n\n        function mouseUp(e) {\n            this.setState({\n                touching: false,\n            });\n            document.removeEventListener('mouseup', mouseUp);\n            document.removeEventListener('mousemove', scroller);\n            document.removeEventListener('touchend', mouseUp);\n            document.removeEventListener('touchmove', scroller);\n        }\n\n        mouseUp = mouseUp.bind(this);\n        scroller = scroller.bind(this);\n\n        if (isTouch) {\n            document.addEventListener('touchmove', scroller);\n            document.addEventListener('touchend', mouseUp);\n\n        } else {\n            document.addEventListener('mousemove', scroller);\n            document.addEventListener('mouseup', mouseUp);\n\n        }\n    }\n\n    onPress(e) {\n        if(demoMode) {\n            return;\n        }\n        if(e.type==='touchstart' && !this.isTouch) {\n            this.isTouch = true;\n        } else if(e.type==='mousedown' && this.isTouch) {\n            this.isTouch = false;\n            return;\n        }\n\n        let digit = parseInt(this.props.fixedValue);\n        if (this.constructor.isValid(digit)) {\n            digit++;\n            if (digit > 9) {\n                digit = 0;\n            }\n        } else {\n            digit = 1;\n        }\n\n        const pageX = e.touches ? e.touches[0].pageX : e.pageX;\n        const pageY = e.touches ? e.touches[0].pageY : e.pageY;\n\n        this.startScroller(pageX, pageY, digit, e.type==='touchstart');\n\n        this.props.sudoku.setGrid(this.props.x,this.props.y,digit);\n        this.props.sudoku.send();\n        e.stopPropagation();\n    }\n\n    static isValid(digit) {\n        digit = parseFloat(digit);\n        if (isNaN(digit)) {\n            return false;\n        }\n        if (Math.floor(digit) !== digit) {\n            return false;\n        }\n        return 1 <= digit && digit <= 9;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return this.props.fixedValue !== nextProps.fixedValue\n            || !this.props.fixedValue && this.props.value !== nextProps.value\n            || this.state.scroll !== nextState.scroll\n            || this.state.touching !== nextState.touching;\n    }\n\n    render() {\n        let className = this.constructor.isValid(this.props.fixedValue)\n            ? 'cell fixed-cell' : 'cell blank-cell';\n        if (this.props.darker) {\n            className += ' darker';\n        }\n        return (\n            <td className={className}\n                onTouchStart={this.onPress}\n                onMouseDown={this.onPress}>\n                <div style={{\n                    height: '100%',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                }}>\n                    {this.props.fixedValue||(this.props.value||'')}\n                </div>\n                <div className={'tip ' + (this.state.touching?'active':'')} style={{\n                    marginTop: -90,\n                    marginLeft: -8,\n                    position: 'absolute',\n                    width: 52,\n                    height: 92,\n                }}>\n                    <svg style={{\n                        position: 'relative',\n                        bottom: -45,\n                    }} height={45} width={58}>\n                        <polygon points={'0,0 58,0 51,45 8,45'} style={{ fillOpacity: 0.2, fill: '#000'}}>\n                        </polygon>\n                    </svg>\n                    <div style={{\n                        position: 'relative',\n                        top: -62,\n                        border: '2px black solid',\n                        backgroundColor: 'lavender',\n                        color: 'darkblue',\n                        height: 54,\n                        width: 54,\n                        opacity: .95,\n                        overflow: 'hidden',\n                    }}>\n                        <div style={{\n                            position: 'relative',\n                            top: this.state.scroll,\n                        }}>\n                            <div className={'scroller'}>\n                            </div>\n                            <div className={'scroller'}>\n                                1\n                            </div>\n                            <div className={'scroller'}>\n                                2\n                            </div>\n                            <div className={'scroller'}>\n                                3\n                            </div>\n                            <div className={'scroller'}>\n                                4\n                            </div>\n                            <div className={'scroller'}>\n                                5\n                            </div>\n                            <div className={'scroller'}>\n                                6\n                            </div>\n                            <div className={'scroller'}>\n                                7\n                            </div>\n                            <div className={'scroller'}>\n                                8\n                            </div>\n                            <div className={'scroller'}>\n                                9\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </td>\n        );\n    }\n}\n\nclass SudokuGrid extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            grid: this.props.sudoku.grid,\n            fixedGrid: this.props.sudoku.grid,\n        };\n        this.props.sudoku.addUpdateCallback(this.onUpdate.bind(this));\n        if(demoMode) {\n            this.time = performance.now();\n            this.solving = true;\n            this.cellList = [];\n            for(let i=0; i< 81; i++) {\n                this.cellList[i] = [i%9 + 1, Math.floor(i/9) + 1];\n            }\n            this.shuffleCellList();\n            this.cellIndex = 0;\n        }\n    }\n\n    shuffleCellList() {\n        for(let i=0; i<this.cellList.length; i++) {\n            const temp = this.cellList[i];\n            const index = Math.floor(Math.random() * this.cellList.length);\n            this.cellList[i] = this.cellList[index];\n            this.cellList[index] = temp;\n        }\n    }\n\n    onUpdate(grid, fixedGrid) {\n        if(this.updating) {\n            return;\n        }\n        this.updating = true;\n        this.setState({grid: grid, fixedGrid: fixedGrid});\n    }\n\n    componentDidUpdate() {\n        this.updating = false;\n\n        if(demoMode) {\n            this.demo();\n        }\n    }\n\n    demo() {\n        if(performance.now() - this.time > 100) {\n            if(this.solving) {\n                const pos = this.cellList[this.cellIndex];\n                const x = pos[0];\n                const y = pos[1];\n                this.props.sudoku.setGrid(x, y, this.state.grid[y][x]);\n                this.cellIndex++;\n                if (this.cellIndex >= this.cellList.length) {\n                   this.solving = false;\n                }\n            } else {\n                this.cellIndex--;\n                const pos = this.cellList[this.cellIndex];\n                const x = pos[0];\n                const y = pos[1];\n                this.props.sudoku.setGrid(x, y, 0);\n                if (this.cellIndex === 0) {\n                    this.solving = true;\n                    this.shuffleCellList();\n                }\n            }\n            this.time = performance.now();\n        }\n    }\n\n    componentDidMount() {\n        this.props.sudoku.start();\n    }\n\n    componentWillUnmount() {\n        this.props.sudoku.stop();\n    }\n\n    subGrid(xpos, ypos) {\n        const odd = (xpos + ypos) % 2 === 1;\n        const array = [];\n        for (let y = 0; y < 3; y++) {\n            const line = [];\n            for (let x = 0; x < 3; x++) {\n                const x_attr = xpos * 3 + x + 1;\n                const y_attr = ypos * 3 + y + 1;\n                const id = `id_${x_attr}_${y_attr}`;\n                const value = this.state.grid[y_attr][x_attr];\n                const fixedValue = this.state.fixedGrid[y_attr][x_attr];\n                line.push(\n                    <SudokuCell darker={odd && demoMode}\n                        key={x+y*3} sudoku={this.props.sudoku} value={value}\n                        x={x_attr} y={y_attr} fixedValue={fixedValue} />\n                );\n            }\n            array.push(<tr key={y}>{line}</tr>);\n        }\n        return array;\n    }\n\n    cells() {\n        const array = [];\n        for (let y = 0; y < 3; y++) {\n            const line = [];\n            for (let x = 0; x < 3; x++) {\n                line.push(<td key={x+y*3}>\n                    <table className='subtable' cellSpacing={0} cellPadding={0}>\n                        <tbody>\n                            {this.subGrid(x,y)}\n                        </tbody>\n                    </table>\n                </td>);\n            }\n            array.push(<tr key={y}>{line}</tr>);\n        }\n        return array;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='title'>\n                    {this.props.title?<h2>{this.props.title}</h2>:null}\n                </div>\n                <div className='container'>\n                    <table cellSpacing={0} cellPadding={0}>\n                        <tbody>\n                        {this.cells()}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction showSudokuGrid(sudoku) {\n    ReactDOM.render(\n        <SudokuGrid title=\"Sudoku Solver\" sudoku={sudoku} />,\n        document.getElementById('root'),\n    );\n}"]}